@using Microsoft.Extensions.DependencyInjection
@using System.Reflection.Metadata
@inherits OwningComponentBase

@page "/manage/people/edit/{id:long}"
<h4 class="bg-primary text-white text-center p-2">Edit person: @Person.Firstname @Person.Surname</h4>
<EditForm Model="Person" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary/>
    <div class="form-group">
        <label>ID</label>
        <InputNumber class="form-control" @bind-Value="Person.Id" disabled/>
    </div>
    <div class="form-group">
        <label>Firstname</label>
        <ValidationMessage For="@(() => Person.Firstname)" />
        <InputText class="form-control" @bind-Value="Person.Firstname"/>
    </div>
    <div class="form-group">
        <label>Surname</label>
        <ValidationMessage For="@(() => Person.Surname)" />
        <InputText class="form-control" @bind-Value="Person.Surname"/>
    </div>
    <div class="form-group">
        <label>Department ID</label>
        <ValidationMessage For="@(() => Person.DepartmentId)" />
        <InputNumber class="form-control" @bind-Value="Person.DepartmentId"/>
    </div>
    <div class="text-center">
        <button type="submit" class="btn btn-primary">Submit</button>
        <NavLink class="btn btn-secondary" href="/manage/people">Back</NavLink>
    </div>
</EditForm>



@code {
    public IPeopleRepository PersonRepository => ScopedServices.GetService<IPeopleRepository>();

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Parameter]
    public long Id { get; set; }

    public Person Person { get; set; }

    protected override void OnParametersSet()
    {
        Person = PersonRepository.GetById(Id);
    }

    public void HandleValidSubmit()
    {
        PersonRepository.Update(Person);
        NavigationManager.NavigateTo("/manage/people");
    }

}
